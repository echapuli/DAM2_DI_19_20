/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package componentetemporizador;

import java.awt.Color;
import java.awt.Graphics;
import java.io.File;
import java.io.Serializable;
import java.text.DecimalFormat;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;

/**
 *
 * @author Eduardo
 */
public class JpanelTemporalizador extends javax.swing.JPanel implements Serializable{
    //propiedades del componente
    private double numSegundos;  //Número de milisegundos para la cuenta atrás
    private String textoFin;  //Texto que mostrará al finalizar
    private Color colorFin;   //color que mostrará al finalizar
    private boolean mostrarDecimales;  //Nos indicará si mostramos o no decimales
    private File imagen;      //Imagen que mostrará al finalizar
    private double contador;
    private int intervalo;
    /**
     * Creates new form JpanelTemporalizador
     */
    public JpanelTemporalizador() {
        initComponents();
    }
    public String getTextoFin() {
        return textoFin;
    }

    public void setTextoFin(String textoFin) {
        this.textoFin = textoFin;
    }

    public Color getColorFin() {
        return colorFin;
    }

    public void setColorFin(Color colorFin) {
        this.colorFin = colorFin;
    }

    public boolean getMostrarDecimales() {
        return mostrarDecimales;
    }

    public void setMostrarDecimales(boolean mostrarDecimales) {
        this.mostrarDecimales = mostrarDecimales;
    }

    public File getImagen() {
        return imagen;
    }

    public void setImagen(File imagen) {
        this.imagen = imagen;
    }

    public double getNumSegundos() {
        return numSegundos;
    }

    public void setNumSegundos(double numSegundos)
    {
        this.numSegundos = numSegundos;
    } 
   
    private void cuentaAtras()
    {
        contador = numSegundos;
        Timer timer = new Timer();
        if (mostrarDecimales) //mostramos un decimal
            intervalo=100; //se medira cada 100 milésimas
        else
            intervalo=1000; //se medira cada 100 milésimas
                
        TimerTask task = new TimerTask() { //en principio tenemos que crear un objeto TimerTask que defina la tarea que vamos a ejecutar dentro de su método run() (el cuál tenemos que implementar (con @Override)
            int tic = 0;

            @Override
            public void run()
            {
                if (contador>=0)
                {
                    String valorMostrar;
                    
                     if (mostrarDecimales){
                        valorMostrar=new DecimalFormat("#0.0#").format(contador); //formateamos con un decimal
                        jLabeltemporalizador.setText(valorMostrar);
                        contador=contador-0.1d;  //le uitamos una decima de segundo
                     }else{
                        valorMostrar=new DecimalFormat("#0").format(contador); //formateamos sin decimales
                        jLabeltemporalizador.setText(valorMostrar);  
                        contador=contador-1;  //le uitamos unn segundo
                     }
                }
                else
                {
                    jLabeltemporalizador.setOpaque(true);                    
                    jLabeltemporalizador.setBackground(colorFin);                    
                    jLabeltemporalizador.setText(textoFin);
                    mostrarImagen();
                }
            }
        };
        // Empezamos dentro de 0ms y luego lanzamos la tarea cada intervalo milisegundos
        timer.schedule(task, 0, intervalo);     
    }
    
    private void mostrarImagen() {
        if ((imagen!=null) && (imagen.exists())){
           ImageIcon imageIcon = new ImageIcon(imagen.getAbsolutePath());
           Graphics g=jPanelImagen.getGraphics();
           g.drawImage(imageIcon.getImage(), 0, 0, null);
       }           
    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabeltemporalizador = new javax.swing.JLabel();
        jButtonComenzar = new javax.swing.JButton();
        jPanelImagen = new javax.swing.JPanel();

        jLabeltemporalizador.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabeltemporalizador.setForeground(new java.awt.Color(0, 0, 255));
        jLabeltemporalizador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButtonComenzar.setText("Comenzar");
        jButtonComenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComenzarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelImagenLayout = new javax.swing.GroupLayout(jPanelImagen);
        jPanelImagen.setLayout(jPanelImagenLayout);
        jPanelImagenLayout.setHorizontalGroup(
            jPanelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelImagenLayout.setVerticalGroup(
            jPanelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jButtonComenzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(150, 150, 150))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabeltemporalizador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabeltemporalizador, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonComenzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonComenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComenzarActionPerformed
        String valorMostrar;    
        jButtonComenzar.setEnabled(false);
        if (mostrarDecimales){
            valorMostrar=new DecimalFormat("#0.0#").format(contador); //formateamos con un decimal
            jLabeltemporalizador.setText(valorMostrar);
         }else{
            valorMostrar=new DecimalFormat("#0").format(contador); //formateamos sin decimales
            jLabeltemporalizador.setText(valorMostrar);                         
        }
        cuentaAtras();
    }//GEN-LAST:event_jButtonComenzarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonComenzar;
    private javax.swing.JLabel jLabeltemporalizador;
    private javax.swing.JPanel jPanelImagen;
    // End of variables declaration//GEN-END:variables
}
